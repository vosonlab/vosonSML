% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Collect.R, R/Collect.reddit.R,
%   R/Collect.twitter.R, R/Collect.youtube.R
\name{Collect}
\alias{Collect}
\alias{Collect.reddit}
\alias{Collect.twitter}
\alias{Collect.youtube}
\title{Collect data from social media for generating networks}
\usage{
Collect(credential, ...)

\method{Collect}{reddit}(credential, threadUrls, waitTime = 5,
  writeToFile = FALSE, ...)

\method{Collect}{twitter}(credential, searchTerm = "",
  searchType = "recent", numTweets = 100, includeRetweets = TRUE,
  retryOnRateLimit = FALSE, writeToFile = FALSE, verbose = FALSE,
  ...)

\method{Collect}{youtube}(credential, videoIDs, verbose = FALSE,
  writeToFile = FALSE, maxComments = 1e+13, ...)
}
\arguments{
\item{credential}{A \code{credential} object generated from \code{Authenticate}.}

\item{...}{Additional parameters for data collection by appropriate to credential \code{socialmedia} type.}

\item{threadUrls}{character string vector. Reddit thread url's to collect data from.}

\item{waitTime}{numeric integer. Time in seconds to wait in-between url collection requests.}

\item{writeToFile}{Logical. If the collected data should be written to file. Default is \code{FALSE}.}

\item{searchTerm}{Character string. Specifies a search term or phrase (e.g. "Australian politics") or hashtag (e.g. 
"#auspol"). Many query operators are available - see the Twitter documentation for more information: 
https://dev.twitter.com/rest/public/search}

\item{searchType}{Character string. Returns filtered tweets as per search type \code{recent}, \code{mixed} or 
\code{popular}. Default type is \code{recent}.}

\item{numTweets}{Numeric. Specifies how many tweets to be collected. Defaults is \code{100}.}

\item{includeRetweets}{Logical. Specifies if the search should filter out retweets. Defaults is \code{TRUE}.}

\item{retryOnRateLimit}{Logical. Default is \code{FALSE}.}

\item{verbose}{Logical. Outputs additional information about the data collection. Default is \code{FALSE}.}

\item{videoIDs}{Character vector. Specifies one or more youtube video IDs. For example, if the video URL is 
'https://www.youtube.com/watch?v=W2GZFeYGU3s', then use \code{videoIDs = 'W2GZFeYGU3s'}. For multiple videos, the 
function GetYoutubeVideoIDs can be used to create a vector object suitable as input for videoIDs.}

\item{maxComments}{Numeric integer. Specifies how many 'top-level' comments to collect from each video. This value 
*does not* take into account 'reply' comments (i.e. replies to top-level comments), therefore the total number of
comments collected may be higher than maxComments. By default this function attempts to collect all comments.}
}
\value{
A data.frame object of class \code{dataSource} that can be used with \code{Create}.
}
\description{
This function collects data from social media APIs, and structures the data into a data frame of class
\code{dataSource}, ready for creating networks for further analysis. \code{Collect} is the second step of the
\code{Authenticate}, \code{Collect}, \code{Create} workflow. This function is a convenient UI wrapper to the core
CollectDataFrom* family of functions.

Uses RedditExtractoR::reddit_content to collect user and comment data for thread urls.

This function collects data from twitter based on hashtags or search terms, and structures the data into a data 
frame of class \code{dataSource, twitter}, ready for creating networks for further analysis. Relationships are then 
mapped for entities of interest in the data (e.g. users, terms, hashtags) and structured into a data frame format 
suitable for creating unimodal networks (\code{CreateActorNetwork}), bimodal networks (\code{CreateBimodalNetwork}), 
and semantic networks (\code{CreateSemanticNetwork}).

This function collects YouTube comments data for one or more YouTube videos. It structures the data into a data 
frame of class dataSource.youtube, ready for creating networks for further analysis.
}
\details{
The maximum number of tweets for a single call of \code{CollectDataTwitter} is 18000 as per the twitter standard
API rate limits. This API only returns tweets for the last 6 to 9 days.

Language support is available, using the \code{language} parameter. The user can restrict tweets returned to a 
particular language, using the ISO 639-1 code. For example, restricting to English would use \code{language="en"}. 
The full list of codes is available here: https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes.

A variety of query operators are available through the twitter API. For example, "love OR hate" returns any tweets 
containing either term (or both). For more information see the twitter API documentation (under the heading
'Query Operators'): https://dev.twitter.com/rest/public/search

CollectDataYoutube collects public comments from YouTube videos, using the YouTube API.

The function then finds and maps the relationships of YouTube users who have interacted with each other 
(i.e. user i has replied to user j or mentioned user j in a comment) and structures these relationships into a data 
frame format suitable for creating unimodal networks (CreateActorNetwork).

For multiple videos, the user may wish to use the function GetYoutubeVideoIDs, which creates a character
vector of video IDs from a plain text file of YouTube video URLs, which can then be used for the videoIDs
argument of the function CollectDataYoutube.
}
\note{
The reddit API endpoint used for thread collection has maximum limit of 500 comments per thread url.

Currently supported network types: unimodal 'actor' network; CreateActorNetwork.

Note on maxComments argument: Due to quirks/specifications of the Google API, it is currently not possible to 
specify the exact number of comments to return from the API using maxResults argument (i.e.including comments 
that are replies to top-level comments). Therefore, the number of comments collected is usually somewhat greater than
maxComments, if a value is specified for this argument. For example, if a video contains 10 top-level 
comments, and one of these top-level comments has 5 'child' or reply comments, then the total number of comments
collected will be equal to 15. Currently, the user must 'guesstimate' the maxResults value, to collect a 
number of comments in the order of what they require.
}
\seealso{
\code{\link{Authenticate}}, \code{\link{Create}}
}
\keyword{collect}
\keyword{reddit}
\keyword{twitter}
\keyword{youtube}
